/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-29 18:41:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public final class workout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Workouts - Workout Tracker</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Navigation Bar -->\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n");
      out.write("        <a class=\"navbar-brand\" href=\"#\">Workout Tracker</a>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("            <ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"logworkout.jsp\">Log Workout</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"deleteworkout.jsp\">Delete Workout</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"dashboard.jsp\">Dashboard</a>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"nav-item\">\r\n");
      out.write("                    <a class=\"nav-link\" href=\"LogoutServlet\">Logout</a>\r\n");
      out.write("                </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- Workout List -->\r\n");
      out.write("    <div class=\"container\" style=\"padding-top: 80px;\">\r\n");
      out.write("        <h1 class=\"text-center\">Workouts</h1>\r\n");
      out.write("        <table class=\"table table-striped\">\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>Date</th>\r\n");
      out.write("                    <th>Workout Type</th>\r\n");
      out.write("                    <th>Duration (minutes)</th>\r\n");
      out.write("                    <th>Calories Burned</th>\r\n");
      out.write("                    <th>Timer</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody id=\"workoutTableBody\">\r\n");
      out.write("                \r\n");
      out.write("                ");

                    Connection conn = null;
                    Statement stmt = null;
                    ResultSet rs = null;

                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/workout_tracker", "root", "satya123");
                        stmt = conn.createStatement();
                        rs = stmt.executeQuery("SELECT * FROM workouts");

                        while (rs.next()) {
                            String date = rs.getString("date");
                            String workoutType = rs.getString("type");
                            int duration = rs.getInt("duration");
                            int caloriesBurned = rs.getInt("calories_burned");
                
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( date );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( workoutType );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( duration );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( caloriesBurned );
      out.write("</td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <button class=\"btn btn-success start-btn\" data-date=\"");
      out.print( date );
      out.write("\" data-type=\"");
      out.print( workoutType );
      out.write("\" data-duration=\"");
      out.print( duration );
      out.write("\" data-calories=\"");
      out.print( caloriesBurned );
      out.write("\" onclick=\"startTimer(this)\">Start</button>\r\n");
      out.write("                        <button class=\"btn btn-warning stop-btn\" onclick=\"stopTimer(this)\">Stop</button>\r\n");
      out.write("                        <button class=\"btn btn-danger reset-btn\" onclick=\"resetTimer(this)\">Reset</button>\r\n");
      out.write("                        <span class=\"timer\">0:00</span>\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");

                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    } finally {
                        try {
                            if (rs != null) rs.close();
                            if (stmt != null) stmt.close();
                            if (conn != null) conn.close();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Timer Functions -->\r\n");
      out.write("    <script>\r\n");
      out.write("        function startTimer(button) {\r\n");
      out.write("            var durationStr = button.getAttribute('data-duration');\r\n");
      out.write("            var duration = parseInt(durationStr);\r\n");
      out.write("            if (!isNaN(duration)) {\r\n");
      out.write("                var timerSpan = button.parentElement.querySelector('.timer');\r\n");
      out.write("                var currentTimer = duration * 60;\r\n");
      out.write("                displayTime(timerSpan, currentTimer);\r\n");
      out.write("                var timer = setInterval(function() {\r\n");
      out.write("                    currentTimer--;\r\n");
      out.write("                    displayTime(timerSpan, currentTimer);\r\n");
      out.write("                    if (currentTimer <= 0) {\r\n");
      out.write("                        clearInterval(timer);\r\n");
      out.write("                        saveWorkoutDone(button);\r\n");
      out.write("                    }\r\n");
      out.write("                }, 1000);\r\n");
      out.write("                button.setAttribute('data-timer', timer);\r\n");
      out.write("            } else {\r\n");
      out.write("                console.error('Invalid duration: ' + durationStr);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function stopTimer(button) {\r\n");
      out.write("            var startBtn = button.parentElement.querySelector('.start-btn');\r\n");
      out.write("            var timer = startBtn.getAttribute('data-timer');\r\n");
      out.write("            clearInterval(timer);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function resetTimer(button) {\r\n");
      out.write("            var timerSpan = button.parentElement.querySelector('.timer');\r\n");
      out.write("            timerSpan.textContent = '0:00';\r\n");
      out.write("            var startBtn = timerSpan.parentElement.querySelector('.start-btn');\r\n");
      out.write("            clearInterval(startBtn.getAttribute('data-timer'));\r\n");
      out.write("            startBtn.removeAttribute('data-timer');\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function displayTime(timerSpan, time) {\r\n");
      out.write("            var minutes = Math.floor(time / 60);\r\n");
      out.write("            var seconds = time % 60;\r\n");
      out.write("            timerSpan.textContent = minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function saveWorkoutDone(button) {\r\n");
      out.write("    var date = button.getAttribute('data-date');\r\n");
      out.write("    var type = button.getAttribute('data-type');\r\n");
      out.write("    var duration = button.getAttribute('data-duration');\r\n");
      out.write("    var calories = button.getAttribute('data-calories');\r\n");
      out.write("\r\n");
      out.write("    // AJAX request to save the workout\r\n");
      out.write("    var xhr = new XMLHttpRequest();\r\n");
      out.write("    xhr.open(\"POST\", \"SaveWorkoutServlet\", true);\r\n");
      out.write("    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n");
      out.write("    xhr.onreadystatechange = function() {\r\n");
      out.write("        if (xhr.readyState === 4) {\r\n");
      out.write("            if (xhr.status === 200) {\r\n");
      out.write("                // Successful response\r\n");
      out.write("                window.location.href = 'DashboardServlet';\r\n");
      out.write("            } else {\r\n");
      out.write("                // Error handling\r\n");
      out.write("                console.error('Error saving workout:', xhr.responseText);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    };\r\n");
      out.write("    var data = \"date=\" + encodeURIComponent(date) +\r\n");
      out.write("               \"&type=\" + encodeURIComponent(type) +\r\n");
      out.write("               \"&duration=\" + encodeURIComponent(duration) +\r\n");
      out.write("               \"&calories=\" + encodeURIComponent(calories);\r\n");
      out.write("    xhr.send(data);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
